<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd">

  <!-- ========================= GENERAL DEFINITIONS ========================= -->


  <!-- ========================= CONPORNENT DEFINITIONS ======================== -->
  <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

  <bean id="clientHttpRequestFactoryCreator" class="example.infrastructure.webclient.CustomHttpComponentsClientHttpRequestFactoryCreator" >
    <property name="maxTotalConnections" value="100"></property>
    <property name="maxConnectionsPerRoute" value="10"></property>
    <property name="connectionTimeoutMilliseconds" value="2000"></property>
    <property name="readTimeoutMilliseconds" value="2000"></property>
    <property name="retryHandler">
        <bean class="example.infrastructure.webclient.CustomHttpRequestRetryHandler"></bean>
    </property>
    <property name="retryStrategy">
        <bean class="example.infrastructure.webclient.CustomServiceUnavailableRetryStrategy"></bean>
    </property>
  </bean>
  <bean id="clientHttpRequestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
    factory-bean="clientHttpRequestFactoryCreator"
    factory-method="createFacotry">
  </bean>

  <context:component-scan base-package="example" />


  <!-- ========================= DATASOURCE CONFIGURATION ======================== -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
    <constructor-arg ref="dataSource"/>
    <qualifier value="ReadWrite"/>
  </bean>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
    <constructor-arg ref="readWriteNativeDataSource" />
  </bean>

  <bean id="readOnlyTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <constructor-arg ref="readOnlyDataSource"/>
    <qualifier value="ReadOnly"/>
  </bean>

  <bean id="readOnlyDataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
    <constructor-arg ref="readOnlyNativeDataSource" />
  </bean>

  <!-- ========================= DOMA CONFIGURATION ========================== -->
  <bean id="domaConfiguration" class="example.infrastructure.db.domasupport.DataSourceConfiguration" >
    <property name="dialect" ref="oracleDialect"></property>
    <property name="dataSource" ref="domaDataSource"></property>
    <property name="requiresNewController" ref="domaRequiresNewController"></property>
  </bean>

  <bean id="oracleDialect" class="org.seasar.doma.jdbc.dialect.OracleDialect" />

  <bean id="domaDataSource" class="example.infrastructure.db.MultiTransactionAwareDataSourceProxy">
    <constructor-arg>
        <map key-type="java.lang.String" value-type="javax.sql.DataSource">
            <entry key="ReadWrite" value-ref="dataSource"></entry>
            <entry key="ReadOnly" value-ref="readOnlyDataSource"></entry>
        </map>
    </constructor-arg>
  </bean>

  <!-- ========================= ASPECT CONFIGURATION ======================== -->
  <tx:annotation-driven />


  <!-- ========================= ENVIROMENT DEPEND DEFINITIONS ======================== -->
  <beans profile="production">
    <jee:jndi-lookup id="readWriteNativeDataSource" jndi-name="java:comp/env/jdbc/readwritedatasource"/>
    <jee:jndi-lookup id="readOnlyNativeDataSource" jndi-name="java:comp/env/jdbc/readonlydatasource"/>
  </beans>

  <beans profile="development">
    <context:property-placeholder location="classpath:jdbc.properties" />

    <bean id="dialect" class="org.seasar.doma.jdbc.dialect.OracleDialect" />

    <bean id="readWriteNativeDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.readwrite.driverClassName}"/>
        <property name="url" value="${jdbc.readwrite.url}"/>
        <property name="username" value="${jdbc.readwrite.username}"/>
        <property name="password" value="${jdbc.readwrite.password}"/>
        <property name="maxActive" value="${jdbc.readwrite.maxActive}"/>
    </bean>
    <bean id="readOnlyNativeDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.read.driverClassName}"/>
        <property name="url" value="${jdbc.read.url}"/>
        <property name="username" value="${jdbc.read.username}"/>
        <property name="password" value="${jdbc.read.password}"/>
        <property name="maxActive" value="${jdbc.read.maxActive}"/>
    </bean>
  </beans>
</beans>
